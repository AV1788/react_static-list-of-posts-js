{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","PostList","App","ReactDOM","render","document","getElementById"],"mappings":"uz8IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAQE,OAGV,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCfFC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCJrCC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBACEV,UAAU,WACVE,KAAI,iBAAYQ,EAAKP,OAFvB,SAIGO,EAAKT,SCHGU,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,qBAAIZ,UAAU,WAAd,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGY,EAAKC,QAGR,8BACG,eAEAD,EAAKF,MAAS,cAAC,EAAD,CAAUA,KAAME,EAAKF,aAIxC,mBAAGV,UAAU,iBAAb,SACGY,EAAKR,OAGR,uBAC0B,IAAzBQ,EAAKN,SAASQ,OACb,mBAAG,UAAQ,oBAAX,6BACG,cAAC,EAAD,CAAaR,SAAUM,EAAKN,gB,qBCZrC,IAAMS,EAAQC,EAAgBT,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MANuBO,EAMDL,EAAKK,OALpBC,EAAgBC,MAAK,SAAAT,GAAI,OAAIA,EAAKF,KAAOS,MAAW,MAM3DX,UAX4Bc,EAWGR,EAAKJ,GAV7Ba,EAAmBC,QAAO,SAAAvB,GAAO,OAAIA,EAAQqB,SAAWA,QADjE,IAA8BA,EAILH,KAUZM,EAAW,kBACtB,oBAAIvB,UAAU,WAAd,SACGe,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCnBzBgB,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,QCHJyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fc7a8220.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n  >\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <li className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        {post.user && (<UserInfo user={post.user} />)}\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <hr />\n    {post.comments.length === 0 ? (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    ) : (<CommentList comments={post.comments} />)}\n  </li>\n);\n","import { PostInfo } from '../PostInfo';\nimport postsFromServer from '../../api/posts.json';\nimport commentsFromServer from '../../api/comments.json';\nimport usersFromServer from '../../api/users.json';\n\nfunction filteredCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nfunction getUserByUserId(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserByUserId(post.userId),\n  comments: filteredCommentsById(post.id),\n}));\n\nexport const PostList = () => (\n  <ul className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </ul>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}